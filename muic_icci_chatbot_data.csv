courseCode,courseName,preeCode,pre,description,advice_review
ICMA106,Calculus1,ICMA100,Foundation Mathematics,"Brief review Of trigonometry; limits and continuity; differentiation and its techniques; derivatives of algebraic and trigonometric functions; graph sketching; applications of the derivatives; antiderivative and integration; area under a curve and between curves
","This course covers foundational calculus topics, including limits, continuity, and differentiation. Although several professors teach the course, all instructors follow the same curriculum. The material is similar to high school calculus but includes more topics and faster pacing. The content is not particularly difficult, but there is a substantial volume to learn. It is recommended to take this course early in your first year, as it serves as a prerequisite for many later courses."
ICMA213,Calculus2,ICMA106,Calculus1,Derivatives Of logarithmic and exponential functions; techniques Of integration; improper integrals and indeterminate forms; applications of the derivative and integration; infinite series; functions of several variables; limits end continuity; partial derivative,"The course quite fast, confusing, and there is a tons of lecture. You better find the way to study the course as soon as possible. My trick was to try to note as much as possible, then review the methods before the exam. It would be great if you could finished this course within your freshman year, since I will be prerequisites to many courses."
ICPY101,Physics1,None,None,"Measurement, units and dimensions; vectors, linear motion, Newton's law Of motion, rotational motion, energy, momentum, static equilibrium, fluid mechanics","In previous years, this course relied heavily on self-study. The instructor typically adds students to Canvas and expects them to study independently. Homework assignments and quizzes are frequent and make up the majority of your grade, so be sure to complete them on time. Attendance is not mandatory, but if you do attend, the instructor is available to answer questions and provide clarification. It's recommended to take this course in your first trimester, as it is required by many majors. Delaying it could cause scheduling issues or slow your progress."
ICPY102,Physics2,ICPY101,Physics1,"Oscillations and wave; light and sound; thermodynamics; electricity and magnetism; modern 
physics ","The content will be seperate into 3 parts including wave, thermodynamics, and electricity. At the end of each part will have an exam, each exam will have same score, which will add up more than 100. The instructor is quite chill and kind. Better attend the class, sometime he will hint what will be in the exam. Similar to calculus2, better take this course as soon as possible since it unlocks many other courses."
EGCI113,Fundamental Computer Programming,None,None,"Introduction to computer concepts, computer components, hardware and software, hardware and software interaction, and Electronic Data Processing (EDP) concepts; introduction to program design and implementation using a high-level language: types and expressions, iterative and conditional control statements, functions, Boolean logic, array","This will be your first programming course in the major. It teaches fundamental programming concepts using the C language. Try to attend and understand the course thoroughly, as programming is a core skill in this field of study. If you find it difficult to keep up, consider looking for supplementary content on YouTube or other platforms—there are many creators who provide explanations with visualizations that can make the material easier to understand. The course is taught by two different instructors who alternate each term, but there are no major differences in the course content between them."
EGCI201,Discrete Mathematics,None,None,"Basic set theory, mathematical reasoning, relations, functions, graphs, trees, an introduction to number theory ","This course focuses on the application of mathematical logic and proof techniques in areas such as number theory and graph theory. Although attendance is not checked, it is strongly recommended to attend classes, as the content can be quite challenging. If you struggle to keep up, consider using supplementary resources on YouTube or other platforms. Before both the midterm and final exams, the instructor typically assigns a homework set that reflects the exam content—there’s a good chance that some questions from the homework will appear on the actual exam."
EGCI211,Advance Computer Programming,EGCI113,Fundamental Computer Programming,"Programming techniques and concepts. Various techniques for Efficient Pointer; Structure; Sorting; Programming, Software-bug Prevention, Debugging, Testing, and Source-Code and version control; Scope/Lifespan of variables ","It is recommended to take this course right after Fundamental Computer Programming (EGCI113), as it continues with the C++ language. You may struggle with the new syntax at first, but if you have a solid foundation in programming, it will become easier over time. One key topic introduced in this course is pointers, which can be quite confusing. Make sure to understand this concept thoroughly—either through class explanations or external resources—as it will help you succeed in the rest of the course. Other key topics in the course would be OOP and basic of Data Structers and Algorithms."
EGCI230,Electric Circuit Analysis,ICPY102,Physics2,"Circuit elements; Kirchhofrs laws; resistive circuits; node and mesh analysis; Thevenin and Norton theorems; Op-amp, inductor and capacitor, first order and second order circuits; step responses; zero input and zerctate responses; DC transient and AC steady-state responses; elementary transfer functions; sinusoidal waveforms; phasor representations; impedance and admittance; sinusoidal analysis; Com power; frequency responses 
","This course is taught by two different instructors who alternate each term. Some students find Aj. Decha's class more difficult and intensive, with a fast pace and higher expectations. On the other hand, Aj. Konglit tends to go at a much slower pace, which some students appreciate for clarity, while others feel it can lead to a slow and less engaging experience. Your preference may depend on whether you thrive under pressure or prefer a more gradual learning pace."
EGCI232,Engineering Electronics,ICPY102,Physics2,"Introduction to solid-state electronics as circuit elements. i cludingdiodes, bipolar transistor, rectifier circuits, Zener diodes regulators, power supplies, power amplification, MOSFETS,  applications in operational amplifiers in various feedback configurations ","Although the official prerequisite is Physics 2 (ICPY102), it is strongly recommended to take Electric Circuit Analysis (EGCI230) first, as this course requires solid circuit analysis skills. The course is taught by two different instructors who alternate each term. Some students find Aj. Decha more challenging but also more practical and hands-on. Others prefer Aj. Somnida, whose teaching style is considered easier, though her course typically includes two midterm exams. Your experience may vary depending on your learning style and preference for exam structure versus practical depth."
EGCI305,Statistics for Research in Computer Engineering,ICMA213,Calculus2,The design of experiments; the collection and presentation of data; descriptive statistics; elementary probability and normal distributions; the estimation of parameters; hypothesis testing; the analysis of variance; regression and correlation; the analysis of frequencies and non-parametric methods,"This course provides an introduction to the field of data. The first half covers core statistical concepts such as Excel usage, probability, data distributions, hypothesis testing, and statistical inference. In the second half, you’ll work with Python libraries like pandas for data manipulation, along with topics such as data visualization, regression analysis, inference between two populations, and the concept of UCL (Upper Control Limit). The course transitions between theory and practical application, so be prepared to engage with both statistical reasoning and basic programming skills. Although the official prerequisite is Calculus 2 (ICMA213), it is recommended to take Engineering Mathematics for Signal and Systems (EGCI202) beforehand, as it provides helpful background in probability. However, it is still completely fine if you haven’t taken EGCI202 before."
ICMA223,Linear Algebra A,None,None,"Linear equations, system of linear equations, matrices, Euclidean spaces, traces, determinants","This lecture-based course focuses on linear algebra and matrix methods, similar to high school math but with more advanced content and practical applications. Professor Pornrat explains concepts thoroughly and is approachable for questions. The course includes three quizzes, a final exam, and some homework assignments. Practicing problems from the recommended textbook is highly beneficial for exam preparation."
EGCI202,Engineering Mathematics for Signal and Systems,ICMA106,Calculus1,"The basic complex anawsis, probability and random variables, mathematics for linear systems; superposition, convolution, Laplace transform, Fourier analysis; discrete time Fourier transform, Z-transform, ordinary differential equations","This course covers three main topics: complex numbers, probability, and techniques in Signals and Systems. The midterm exam typically focuses on complex numbers and probability, although there is a chance that Laplace Transform, from the last topic, may also appear. The final exam usually emphasizes advanced topics in Signals and Systems.The instructor regularly assigns homework, and it's generally acceptable if you make calculation mistakes or submit late—solutions are usually provided afterward. The teaching style is slow-paced, which some students appreciate for clarity. However, if you prefer a faster-paced class, try actively answering questions during lectures. If no one responds, the instructor may assume the class is struggling and will slow down or review the content again."
EGCI213,Programming Paradigms,EGCI113,Fundamental Computer Programming,"An introduction to programming paradigms and programming languages; fundamental programming concepts: data types, basic programming statements, functions, memory management; object-oriented programming, concurrent programming, event-driven programming","This course introduces you to a new programming language: Java. Since Java is an object-oriented programming (OOP) language, it is recommended to take Advanced Computer Programming (EGCI211) first for better preparation. The first half of the course covers basic Java and core OOP concepts in detail, including classes, objects, inheritance, abstraction, polymorphism, and exception handling. The second half focuses on concurrency and graphical user interface (GUI) development. The instructor assigns homework nearly every week, which serves as a good review of each topic. There are also three group projects, so it's a good idea to enroll in the course with friends you can collaborate with. Exams are on paper, and you’re allowed to bring as many cheat sheets as you like—though it's best to keep them concise, as shorter summaries make it easier to find what you need during the test."
EGCI221,Data Structures and Algorithms,EGCI211,Advance Computer Programming,"The analysis of algorithms; abstract data types; linear data structures: linked lists, stacks, queues; non-linear data structures: trees, hash tables, graphs; sorting and searching algorithms; recursion, divide-and-conquer algorithms, dynamic programming, greedy algorithms; an introduction to NP-completeness","This course covers core concepts in data structures and algorithms, taught by two professors with different areas of focus. Professor Rangsipan emphasizes data structures through lecture-based sessions, supported by well-organized and information-rich slides, weekly assignments and two projects reinforce the material, wxams are challenging and require students to apply learned concepts to new problems. Professor Rangsipan regularly take attendance.  Professor Vasin, on the other hand, focuses more on algorithms and does not take attendance. For Professor Vasin, there are only two major assignments, assigned before exams, where simply submitting guarantees full score. These assignments often contain questions similar to the exams. The programming language Professor Rangsipan used is Java; a dedicated session is provided for those new to Java, making it accessible for beginners. While for Vasin you are free to use any languages you prefer. Students’ experiences may vary depending on which instructor they have. "
EGCI231,Digital Circuit Design,ECGI233,Digital Circuit Design Lab (must take together),"The digital Circuit Design, Basic Gates, Boolean Algebra, Combination Logic Circuit Design (e.g. Decoder, Encoder, Multiplexer, and Comparator circuits), Logic Minimization, Number Systems, Binary Codes, Flip-Flops and register, Counter Circuits, Synchronous and Asynchronous Circuit Design, MD and D/A converters, Memory Organization",This course is a lab designed to be taken alongside Digital Circuit Design (ECGI231). It allows students to build and experiment with simple circuits using basic integrated circuits (ICs) introduced in the lecture course.
EGCI233,Digital Circuit Design Lab,ECGI231,Digital Circuit Design (must take together),"An introduction to the Digital Systems Lab, Basic Gates' Operations; Boolean Algebra; the Design of Adder and the Subtractor Circuits, Encoder and Decoder Circuits; Multiplexer and Demultiplexer Circuits, the Design Of Sequential Circuits","This course teaches circuit theory and is designed to be taken alongside the Digital Circuit Design Lab (ECGI233) for hands-on practice. The course is taught by two professors with different teaching styles: Professor Sumeth offers a lighter workload with frequent review assignments, no attendance checks, and open-book midterm and final exams. Professor Tanadol provides a more intensive experience, focusing on building a strong foundation in circuits, which is beneficial for courses like computer architecture that reuse this content."
EGCI252,System Programming,EGCI211,Advance Computer Programming,"System programming: fundamental process management; concurrency and communication; signals, thread, thread synchronization, semaphores, inter-process communication","This course focuses on system programming using the C language. The first half of the course is relatively manageable, but after the midterm, the content becomes more advanced and extensive. The instruction quality is limited, requiring students to learn and memorize a large number of code syntax for exams. Although exams involve coding, they are completed on paper. Attendance is checked in every class. The course includes many time-consuming assignments."
EGCI319,Internship In Computer Engineering,None,Complete 60 or more EGCI credits,"A minimum 156 hours practical training in an industrial factory or an organization with computer-related systems, computer control system, or systems using computer processing; the internship summary, including the report of the training outcome from the host organization; grading as either 'S' or 'U'",None
EGCI321,Database System,ECGI221,Data Structers and Algorithms,"The entity-relationship model, the relational data model; logical and physical database design, a query language, data dependencies and normalization; the transaction, the crash recovery, the concurrency control; the internet databases","This course focues an in-depth overview of SQL database systems, covering core concepts such as data modeling, relational algebra, SQL, normalization, database security and tiny bits of NoSQL. Although it has a prerequisite course in data structures, the content is not heavily dependent on advanced data structure knowledge. Students must complete the data structures course formally before enrolling, but lack of strong skills in that area is not a major barrier to success."
EGCI330,Microprocessor and Interfacing,ECGI231,Digital Circuie Design,"Introduction to microprocessor, microprocessor architecture and instruction set, addressing modes, assembly language, memory interfacing, interrupts and direct memory access (DMA), interfacing with I/O devices, microprocessor's interfacing programming and applications.","This course focuses on programming microprocessors using both C and assembly language, specifically on the AVR ATmega328P — the same chip used in the Arduino Uno platform. Instruction is typically provided by Professors Sumeth and Karin. The course is currently undergoing changes in both content and delivery style. In past years, students noted that Aj. Sumeth offered a more relaxed teaching approach but provided limited support. In contrast, Aj. Karin's class was considered more intensive and demanding, but helped students build stronger technical skills. While the official prerequisite is Digital Circuit Design (ECGI231), it is recommended to complete Computer Architecture (ECGI333) beforehand for better preparation."
EGCI332,Embedded Systems,None,None,Embedded system designs and development processes; portable•battery operated embedded systems; high-level language programming for embedded system applications; real-time operating system; advanced peripheral interfacing; DAC and ADC converters; sensors and signal conditioners,"This course emphasizes hands-on embedded system development but moves quickly and provides limited detailed instruction. Students complete multiple complex projects, including embedded car tuning, line-following and sumo competitions, and a comprehensive final project."
EGCI333,Computer Architecture,ECGI231,Digital Circuit Design,"Computer components; design of logic circuits; working of and designing register level components used in computer Systems, data representation in computer systems; Clock signal; datapath design; design of control unit using microprogram (CISC architecture) and logic circuit (RISC architecture); performance enhancement; pipeline systems of computers; memory systems; principles and work of cache memory; input-output system design; fundamentals of serial and parallel communication; parallel processing architecture; fault tolerance","This lecture-based course covers the fundamentals of computer architecture and requires prior knowledge of digital circuit design, especially during the first half of the course. The course includes multiple quizzes, a midterm, a final exam, several homework and a report. Exams and quizzes account for most of the final grade, while homework and report contribute a smaller portion. Students should pay close attention in class, as much of the course content is not easily available online."
EGCI340,Software Design,None,None,"An introduction to software design paradigms; software design fundamentals; system and software requirements; software design tools, and Computer aided for software design; business process modeling (BPM); user experience (UX) design; software architecture; Service-oriented architecture (SOA); microservice architecture; software project management","This 2-credit course focuses on the fundamentals of software design. Because the course has limited content, some material presented on the slides may not be fully explained, requiring students to take detailed notes during lectures. The main assessment is a comprehensive final project, in which students propose an application, design its software architecture and components, and create interface mockups using Figma. The project does not require implementing a working application."
EGCI341,Software Engineering,ECGI341,Software Design,"Software life cycle; need and specification; large-scale software development; scheduling, developing, constructing, testing and maintenance of software system; object-oriented analysis and design; software reuse; documentation; management of software project; case studies of software system in the market","This course is a sequel to Software Design (ECGI340), with overlapping concepts but deeper coverage. There are no midterm exams or attendance checks. Instead, the course includes multiple in-class activities and group assignments. A major project is required, which is similar to the ECGI340 project but more in-depth and complex."
EGCI351,Operating Systems,ECGI252,System Programming,Contemporary concepts of computer operating systems; Thread; CPU scheduling; definition and details of harmonizing cooperating process; system resources management; deadlock handling; main memory management and design; virtual memory management; auxiliary memory management; file systems; protection and security; introduction to distributed operating systems,"This course covers fundamental concepts of operating systems, including how engineers approach problems and the trade-offs involved. Topics include threads, concurrency, CPU scheduling, and memory management. Assessment includes multiple quizzes, a report, a midterm, and a final exam — with exams contributing the majority of the final grade (40% each). At the beginning of the course, the instructor recommends a textbook (available online), which is very helpful for preparing for the exams. Although the prerequisite is System Programming (EGCI252), taking Computer Architecture (ECGI333) before is recommneded."
EGCI371,Computer Network and Information Security,None,None,An introduction to the data communication; the network architecture; local and wide area networks; wired and wireless networks; network protocols; network applications; network management; data communications; performance evaluation; data security and integrity; vulnerabilitie; secret and public key cryptography; message authentication codes; network and web security; authentication,"The course is currently undergoing adjustments, so the content may vary depending on the term. In previous years, students were introduced to the OSI model and fundamental concepts in computer security. In some iterations of the course, students had the opportunity to use Cisco Packet Tracer for hands-on networking practice."
EGCI491,Computer Engineering Seminar,None,Complete 60 or more EGCI credits,Developing oral and written communication skills; preparing students for training and cooperative education; a computer engineering or cooperative education proposal project; project approval; further research and implementation in the Computer Engineering Project,None
EGCI492,Computer Engineering Project,ECGI491,Computer Engineerign Seminar,The computer engineering project Supervised by the adviisory committee; a complete project report and an oral examination,None
EGCI432,Distributed Systems,EGCI113,Fundamental Computer Programming,"Naming, consistency, concurrency, and security, reviewing some of the current best practices in computing models: gridcomputing, ang ditributed oject model",None
EGCI474,Internetworking Technologies 1,ECGI371,Computer Network and Information Security,"Theoretical and practical aspects of routing, including internetworking models, internet protocol, and routing technologies; required laboratory work","This course follows the Cisco Networking Academy curriculum and is highly recommended for those pursuing a career as a network engineer. It all foundation concepts in routing and switching, providing practical knowledge for designing and building complete basic internal network infrastructure. The course includes numerous hands-on labs using both Cisco simulations and Cisco physical devices, offering an image of the role of a network engineer. However, the midterm and final exams are heavily memorization-based, requiring students to recall configuration commands for given topologies and scenarios. Additionally, many configurations and protocols taught are specific to Cisco devices."
EGCI475,Internetworking Technologies 2,ECGI474,Internetworking Technologies1,"Theoretical and practical aspects of advanced routing and switching technologies, including hierarchical network design model, layer 2 switching, internet protocol version 6, spanning tree concepts, inter-virtual local area network, wide area network technologies, network security, network services, and network troubleshooting; required laboratory work","Internetworking Technologies 2 is the next step of the Internetworking Technologies 1. Hence, this course runs on the Cisco Networking Academy, but it focuses on the more advanced routing protocols, and and more complex network designs for both internal and external network area. It also covers network management and, network security, troubleshooting, and quality of service. All labs and exams are more challenging as more concepts are applied, but the image of how knowledge will be used in real life is vividly clear. Exams are memorization-based, and same style as Internetworking Technologies 1, as well as configurations and protocols taught are specific to Cisco devices. The best part of this course is once learners achive it, they are granted the discount for the CCNA exam, the essential certificate for starting Cisco Network Engineering Journey."
EGCI476,Cryptography and Computer Security,EGCI201,Discrete Mathematics,An introduction to basic theory and techniques in cryptography; symmetric and asymmetric encryption; cryptanalysis techniques. security in computer network; security threats and vulnerabilities; authentication mechanisms; identification schemes; security in operating system and application; firewall; the intrusion detection system,None
EGCI477,Penetration Testing and Prevention,ECGI371,Computer Network and Information Security,The process of penetration testing; collection and analysis of computer network vulnerabilities; tools for penetration testing; ethics of penetration testing processes; summarizing and reporting the result from the penetration testing; planning and designing of the prevention systems to protect the computer network form vulnerabilities,"In previous years, this course has only been offered a few times and has been taught by two different instructors. Aj. Noppadol follows Cisco’s ethical hacking curriculum, which is highly modular and structured. While this makes the course easy to follow in parts, some students feel it lacks a clear connection between topics, leaving them unsure how everything fits together. Aj. Suratose, on the other hand, takes a more project and lab based approach. Students are assigned to create vulnerable virtual machines, and each group is randomly assigned another group’s machine to test. While this can be engaging, some students have found it controversial, citing issues with fairness and consistency in difficulty between targets."
EGCI478,Wireless Communication,ECGI371,Computer Network and Information Security,Wireless transmission systems; wireless channel; coding techniques; error control; satellite; cellular networks; mobile internet protocols and management; multiple-access techniques; wireless protocols; wireless local area networks (WLANs); and wireless mesh networks,None
EGCI431,Internet of Things,None,None,"IOT architectures, communication technologies for IoT, technologies behind IOT, IOT platform; how they are integrated to form IoT systems","This course builds on Embedded Systems concepts, with a focus on programming in C for the ESP32 platform. It also covers related topics such as databases, IoT network protocols, and cloud server integration. The projects are similar to those in Embedded Systems—time-consuming but manageable. Lectures are informative and delivered by a knowledgeable instructor, though some students feel the instructor’s engagement could be improved. Although there is no official prerequisite, taking Embedded Systems (EGCI322) beforehand is recommended."
EGCI451,Cloud Computing,None,None,"Fundamental Concepts Of Cloud computing; fundamental principles Of the Cloud architecture, web applications development on cloud; web services on cloud, service models for cloud computing; Virtualization technology for cloud computing, computing services, cloud computing services","This course follows the AWS Cloud Practitioner curriculum, which is modular and well-structured. It covers fundamental cloud concepts and gradually introduces core AWS infrastructure services, including compute units, storage, databases, and more. You’ll get hands-on experience through AWS playground environments and labs. However, because the content is broad, some topics may be covered only at a surface level. Both the midterm and final exams typically present real-world scenarios and ask both theoretical and practical questions about AWS services and infrastructure components."
EGCI466,Big Data Processing,None,None,"Theories and techniques for managing big data, big data storage, the distribution system for big data, relationship analysis for big data, big data visualization, trends and applications for big data","This course introduces key concepts in big data, including NoSQL databases, the Hadoop distributed ecosystem, machine learning on the Spark platform, and data streaming. There are two main projects: the midterm project focuses on Hadoop, while the final project builds on it by incorporating machine learning techniques. Although there is no official prerequisite, taking Statistics for Research in Computer Engineering (EGCI305) beforehand is recommended, as it will help you better understand the content covered after the midterm."
EGCI467,Natural Language and Speech Processing,None,None,"Algorithms for the processing of linguistic information, computational properties of natural languages. morphological, syntactic, and semantic processing from a linguistic and an algorithmic perspective, modern quantitative techniques in NLP: using large corpora, statistical models for acquisition, and the representative systems",None
EGCI486,Image Processing,None,None,"The image processing system, an introduction to the digital image processing, the digital image fundamental, the image enhancement, the image transformation, the image restoration, color image processing, image compression, the morphological image processing, the image segmentation, the object recognition",None
EGCI487,Computer Vision,None,None,"An introduction to programming for computer vision; fundamentals of the computer vision, 3D geometrical transformations; the stereo imaging, the perspective camera, the camera calibration, the camera imaging model, the image registration, the wavelet transform, the 3D modeling; image segmentation, feature detection and matching, the face recognition, the object recognition, the content-aware image resizing",None
EGCI331,Introduction to IC Design,ECGI231,Digital Circuie Design,"The N MOS and C MOS integrated circuit technologies; properties of N MOS and C MOS circuits; calculation of parameters in circuits, static and dynamic MOS circuits; system design; circuit drawing and testing: computer arithmetic; performance evaluation; synthesis of digital circuits from HDL models; modeling and simulation; fault models and testing the use of CAD tools in circuit design",None
EGCI406,Mechatronics,None,None,Microcontroller; digital input/output; switches and LEDs; analog input/output; PWM signal; switching devices; relays; motors; H-bridge; serial communication; power supply; sensors; PCB design; feedback control,None
EGCI407,Human-Robit Interaction (HRI),None,None,The fundamentals of robotics basics; a physical humanoid robot component; robot functionality; natural social interaction partners for human users; Human-Robot Interaction (HRI); the role of companion robots in different business application; lifecycle of a robotic application,"This course focuses more on the conceptual and ethical aspects of robotics rather than technical implementation. If you're expecting to build or program robots from scratch, you may be disappointed—the coding and hardware are mostly pre-prepared, and the projects offer limited flexibility, following a strict set of instructions. While the lectures are relaxed and the instructor brings good energy, the overall content may feel lacking in depth or engagement, especially for students looking for a hands-on robotics experience."
EGCI425,Data Mining,None,None,"Knowledge discovery in databases; data preparation, data visualization, and data transformation; clustering, association analysis, classification and ensemble classification; metrics and evaluation; data warehouse, online analytical processing (OLAP); effects of data mining, current technology and trend, applications of data mining",None
EGCI461,Artificial Intelligence,ECGI221,Data Structers and Algorithms,"The foundations of artificial intelligence, solving problems by searching, knowledge representation, the first-order logic, the inference in the first-order logic; planning, the probabilistic reasoning systems; an introduction to Prolog, the natural language processing; the genetic algorithm, and machine learning techniques","This course introduces the fundamental concepts of Artificial Intelligence, including topics such as search algorithms, knowledge representation, logic, and Prolog programming. After the midterm, the focus shifts to various machine learning fields, including decision-making, classification, neural networks, deep learning, natural language processing, and model evaluation. Due to the broad scope of AI, the course attempts to cover just about everything, which means you'll get only a little bit of everything. While it may seem exciting at first, many students find the pace rushed and feel like they're speedrunning the surface of each topic. Overall, the course serves as a basic introduction to the vast world of modern AI."
EGCI463,Pattern Recognition,ICMA213,Calculus2,"Preprocessing for data recognition: features extraction, classification or linear techniques for recognition; Parametric and nonparametric techniques, Bayesian classifiers, methods, neural networks, hybrid method, learning techniques; Applications in pattern recognition","This course focuses on applying AI classification techniques to pattern recognition. Topics covered include basic probability, feature selection, regression, evaluation methods, multilayer perceptrons (MLP), and neural networks. Overall, the course provides a solid, in-depth exploration of the pattern recognition field. While it is not required to have taken an Artificial Intelligence course beforehand, having that background can be helpful."
EGCI301,Computer Graphics,EGCI113,Fundamental Computer Programming,"Principles of the computer graphics, graphics systems and models, graphics programming, graphic devices and their controls; color model, geometric objects and transformations, viewing, shading, clipping, and the hidden-surface removal","This course introduces you to game development and tools such as PyGame, Blender, and Unity. While the topic sounds interesting, more than half of the course time is spent on Blender modeling, which some students feel is a missed opportunity. There is very little time dedicated to learning C#, the primary language used in Unity. The course concludes with a final project that requires both modeling and game development, but the time allotted is often insufficient to complete both effectively."
EGCI404,Theory of Computation,EGCI201,Discrete Mathematics,"An introduction to the structure of languages and the characteristic of languages: formal languages, regular languages and non-regular languages, the context-free grammar and context free languages, describing the characteristic of state machines used to check the membership of languages: finite state machines, transducers, state transition machines, non-deterministic finite state machines, push-down state machines, Turing machines; the advanced theory of computation: Kleene's Theorem, recursively enumerable languages, decision problems",None
EGCI427,Web Programming,None,None,"Semi-structured data models for the Web (such as XML, etc.), the semi-structured data management, associated query languages and query systems for Web data, query processing and optimization over semi-structured data as well as over multiple distributed sources, data integration over the Web, warehousing of Web data; mappings from relational and object-oriented database servers to web data; discussions on some novel data-intensive applications on the Web such as electronic commerce, digital libraries, and distance education relating to web database issues","This course focuses on basic web development, covering both frontend and backend. It uses Vue for the frontend and Express for the backend. While the technologies may not reflect the latest in the industry, the course serves as a solid foundation for understanding modern web development. However, explanations for certain parts of the code can feel lacking, leaving students unsure about the reasoning behind them. Additionally, due to limited time, students typically don’t get the opportunity to deploy their web applications, missing out on an essential step in real-world development."
EGCI428,Mobile Device Programming,None,None,Fundamental of the mobile device programming; concept of mobile device technology: basic mobile device programming; user-interface design; database connection; remote sensors controlling: mobile web services; developing a prototype for the mobile device application for with notification services,"This course focuses on developing Android applications using Kotlin. It covers topics such as the application lifecycle, core components, device control, sensors, database integration, and authentication. You don’t need to own an Android device, as the provided IDE includes an emulator for testing. However, the course can sometimes feel rushed, with limited explanation on why certain parts of the code are written a certain way. Some students feel it turns into a “type-along” session with the instructor, rather than a deep learning experience."
EGCI429,Web Application Architecture,None,None,"Fundamental concepts of web application development from a managerial perspective; extensible Markup Language (XML) and Hypertext Markup Language (HTML) technology: fundamental principles of architecture, process, and elements of web applications; Web services application development; mobile applications such as geographical information system and social networks",None
EGCI494,Fundamental of Digital Forensics,None,None,An introduction to basic of digital forensics; the data collection and investigation from operating system such as Windows and Unix; the computer files system storage; collecting and analyzing the network traffic; data analysis and validation; digital forensic tools,None
EGCI381,Introduction to Quantum Computing,None,None,A brief history of quantum computing and quantum technologies; mathematics for quantum theory; quantum bits (qubits); qubits superposition; entanglement; qubits manipulation; basic quantum and quantum-inspired algorithms; quantum logic gates; and quantum programming,None
EGCI493,Cooperative Education,ECGI319,Intership In Computer Engineering,"Integrating and adapting all classroom knowledge into the real practice in corporate environments, gaining working experiences and teamwork experiences under a supervision of mentors from the companies and advisors from the department, in order to prepare the students from transition from school-to work after graduation; grading as either 'S' or 'U'",None
EGCI495,Regional Study Experience,None,Complete 50 or more EGCI credits,Visit local or international comanies in the fields related to computer engineering technology in order to gain experience and adjust attitude from a perspective of student into working experience perspective in order to prepare the students from transition from school and to make a preparation to work after graduation; grading as either ’s’ or ‘U’,"This course is essentially a field trip. In your 3rd or 4th year, the program director will organize a meeting to announce the details. The destination may be within Thailand or abroad, depending on factors such as budget, company partnerships, and scheduling. After the trip, you’ll be required to submit a brief report about the company you visited."
EGCI496,International Study Experience,None,Complete 50 or more EGCI credits,Visiting international companies or educational institutes abroad in the field related to computer and engineering technology; providing opportunity for students to broaden educational and cultural experience abroad; expanding their knowledge both theoretically and perceptive capacity; prepare for working in international companies or continuing their study; grading as either 'S' or 'U'.,None